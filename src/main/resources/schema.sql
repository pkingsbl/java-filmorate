CREATE TABLE IF NOT EXISTS USERS
(
    ID       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(30) NOT NULL,
    LOGIN    VARCHAR(30) NOT NULL UNIQUE,
    NAME     VARCHAR(40),
    BIRTHDAY DATE
);
CREATE UNIQUE INDEX IF NOT EXISTS USERS_ID_INDEX ON USERS (ID);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID   BIGINT NOT NULL,
    FRIEND_ID BIGINT NOT NULL,
    APPROVE   BOOLEAN,
    CONSTRAINT FK_FRIENDS1 FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_FRIENDS2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS MPA
(
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(10),
    DESCRIPTION  VARCHAR(100)
);
CREATE UNIQUE INDEX IF NOT EXISTS MPA_ID_INDEX ON MPA (ID);

CREATE TABLE IF NOT EXISTS FILMS
(
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(100),
    DESCRIPTION  VARCHAR(200),
    RELEASE_DATE DATE,
    DURATION     INT,
    RATING       INT,
    CONSTRAINT FK_RATING FOREIGN KEY (RATING) REFERENCES MPA (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS FILMS_ID_INDEX ON FILMS (ID);

CREATE TABLE IF NOT EXISTS LIKES
(
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    CONSTRAINT FK_FILMS FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES
(
    ID      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR(20) NOT NULL
);
CREATE UNIQUE INDEX IF NOT EXISTS GENRE_ID_INDEX ON GENRES (ID);

CREATE TABLE IF NOT EXISTS FILMS_GENRE
(
    FILM_ID     BIGINT NOT NULL,
    GENRE_ID    INT NOT NULL,
    CONSTRAINT FILMS_GENRES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID) ON DELETE CASCADE ON UPDATE CASCADE ,
    CONSTRAINT FILMS_GENRES_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES GENRES (ID) ON DELETE CASCADE ON UPDATE CASCADE
);
